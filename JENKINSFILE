pipeline {
    agent { label 'docker' }

    tools {
        maven 'maven'
    }

    environment {
        DOC_CRED = credentials('emman777')
    }

    stages {
        stage('Checkout SCM') {
            steps {
                checkout([$class: 'GitSCM',
                    branches: [[name: '*/master']],
                    userRemoteConfigs: [[url: 'git@github.com:emmanuel5507/MavenJavaProject.git']],
                    extensions: [[$class: 'CloneOption', depth: 1]],
                    credentialsId: 'jen_ssh'
                ])
            }
        }

        stage('Clean') {
            steps {
                sh './mvnw clean'
            }
            post {
                success {
                    echo 'Cleaning Project is Done'
                }
            }
        }

        stage('Compile') {
            steps {
                sh './mvnw compile'
            }
            post {
                success {
                    echo 'Compiling Project is Done'
                }
            }
        }

        stage('Test') {
            steps {
                sh './mvnw -Dmaven.test.failure.ignore=true test'
            }
            post {
                success {
                    junit '**/target/surefire-reports/TEST-*.xml'
                }
            }
        }

        stage('Package') {
            steps {
                sh './mvnw -Dmaven.test.failure.ignore=true clean package'
            }
            post {
                success {
                    archiveArtifacts 'target/*.jar'
                }
            }
        }

        stage("Build Docker Image") {
            steps {
                script {
                    sh "docker build -t emman777/imagejapp ."
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                echo "Starting Docker image push to Docker Hub"
                withCredentials([string(credentialsId: 'emman777', variable: 'DOC_CRED_PSW')]) {
                    sh 'echo $DOC_CRED_PSW | docker login -u $DOC_CRED_USR --password-stdin'
                }
                sh 'docker push emman777/imagejapp'
                echo "Docker image push to Docker Hub completed"
            }
        }
    }
}
